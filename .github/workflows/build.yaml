name: Build OpenShockClock

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: windows-latest
            output_name: OpenShockClock.exe
            asset_name: OpenShockClock-Windows.zip
          - os: ubuntu-latest
            output_name: OpenShockClock
            asset_name: OpenShockClock-Linux.zip
          - os: macos-latest
            output_name: OpenShockClock
            asset_name: OpenShockClock-MacOS.zip

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libgtk-3-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create spec file
        run: |
          cat > openshockclock.spec << 'EOF'
          # -*- mode: python ; coding: utf-8 -*-

          block_cipher = None

          added_files = [
              ('singleuser/static', 'static'),
              ('singleuser/templates', 'templates'),
          ]

          a = Analysis(
              ['singleuser/app.py'],
              pathex=[],
              binaries=[],
              datas=added_files,
              hiddenimports=[
                  'webview',
                  'PIL',
                  'flask',
                  'configparser',
                  'requests'
              ],
              hookspath=[],
              hooksconfig={},
              runtime_hooks=[],
              excludes=['kivy'],
              win_no_prefer_redirects=False,
              win_private_assemblies=False,
              cipher=block_cipher,
              noarchive=False,
          )

          pyz = PYZ(
              a.pure,
              a.zipped_data,
              cipher=block_cipher
          )

          exe = EXE(
              pyz,
              a.scripts,
              a.binaries,
              a.zipfiles,
              a.datas,
              [],
              name='OpenShockClock',
              debug=False,
              bootloader_ignore_signals=False,
              strip=False,
              upx=True,
              upx_exclude=[],
              runtime_tmpdir=None,
              console=True,
              disable_windowed_traceback=False,
              target_arch=None,
              codesign_identity=None,
              entitlements_file=None,
              icon='singleuser/static/favicon.ico'
          )
          EOF

      - name: Build with PyInstaller
        run: pyinstaller openshockclock.spec

      - name: Create ZIP archive
        run: |
          cd dist
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a ../${{ matrix.asset_name }} OpenShockClock.exe
          else
            zip -r ../${{ matrix.asset_name }} OpenShockClock
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: ${{ matrix.asset_name }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            *-build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
